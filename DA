local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Dragon Adventures Script",
   LoadingTitle = "My Hub",
   LoadingSubtitle = "by Kira",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Home", nil) -- Title, Image
local Main Section = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Executed",
   Content = "Made For You!",
   Duration = 5,
   Image =nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = Tab:CreateButton({
   Name = "Infinite Breath",
   Callback = function()
  -- Assuming 'dragon' is a reference to the dragon object in the game
local debounce = false -- Flag to prevent rapid firing

-- Function to execute the breath attack without cooldown
local function infiniteBreathAction()
    if debounce then
        return -- Exit function if already executing
    end
    
    debounce = true -- Set debounce flag to true to prevent rapid firing

    -- Insert code for breath attack (example: fireball creation)
    local fireball = Instance.new("Part")
    fireball.Size = Vector3.new(1, 1, 1)
    fireball.Position = dragon.Position + Vector3.new(0, 5, 0) -- Offset from dragon's position
    fireball.Color = Color3.fromRGB(255, 0, 0) -- Red color for fireball
    fireball.Parent = game.Workspace -- Put fireball in the game world

    -- Function to handle collision and damage
    local function onHit(target)
        if target.Parent and target.Parent:IsA("Model") then
            local humanoid = target.Parent:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- Calculate damage (example: fixed amount for illustration)
                local damage = 10
                humanoid:TakeDamage(damage)
            end
        end
        fireball:Destroy() -- Destroy fireball after hitting target
    end
    
    -- Check for collisions with targets
    fireball.Touched:Connect(onHit)
    
    -- Reset debounce flag after execution (infinite breath)
    debounce = false
end

-- Connect infinite breath action function to player input (example: key press)
game.Players.LocalPlayer:GetMouse().Button1Down:Connect(infiniteBreathAction)
   end,
})

local Button = Tab:CreateButton({
   Name = "Infinite Bite",
   Callback = function()
 -- Assuming 'dragon' is a reference to the dragon object in the game
local debounceBite = false -- Flag to prevent rapid biting

-- Function to execute the biting action without cooldown
local function infiniteBiteAction()
    if debounceBite then
        return -- Exit function if already executing
    end
    
    debounceBite = true -- Set debounce flag to true to prevent rapid biting

    -- Insert code for biting action (example: play biting animation)
    -- Example: dragon.Animation:Play("BiteAnimation")

    -- Check for nearby enemies or targets
    local nearbyEnemies = {} -- Placeholder for nearby enemies or targets

    -- Function to handle damage calculation and interaction with targets
    local function biteTarget(target)
        if target.Parent and target.Parent:IsA("Model") then
            local humanoid = target.Parent:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- Calculate damage (example: fixed amount)
                local damage = 20 -- Example: 20 damage per bite
                humanoid:TakeDamage(damage)
            end
        end
    end

    -- Iterate through nearby enemies and bite them
    for _, enemy in pairs(nearbyEnemies) do
        biteTarget(enemy)
    end
    
    -- Reset debounce flag after execution (infinite bite)
    debounceBite = false
end

-- Connect infinite bite action function to player input (example: key press)
game.Players.LocalPlayer:GetMouse().Button1Down:Connect(infiniteBiteAction)
   end,
})
